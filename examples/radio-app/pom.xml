<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.joynr.examples</groupId>
	<artifactId>radio-app</artifactId>
	<packaging>jar</packaging>
	<name>${project.groupId}:${project.artifactId}</name>

	<parent>
		<groupId>io.joynr</groupId>
		<artifactId>examples</artifactId>
		<version>0.5.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<license.useLicensesConfigFile>true</license.useLicensesConfigFile>
		<guice-version>3.0</guice-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.joynr.java.core</groupId>
			<artifactId>libjoynr</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- this dependency is only required for the development phase, so that the model is accessible via classpath-->
		<dependency>
			<groupId>io.joynr</groupId>
			<artifactId>basemodel</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/model</directory>
			</resource>
		</resources>

		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/package-info*</exclude> <!-- to prevent package-info files from different projects to collide -->
						<exclude>**/CheckForNull*</exclude> <!-- to prevent check-for-null annotations from package-info to be pulled 
							into jar-files -->
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>process-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/generated-java</source>
								<source>src/main/model</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.joynr.tools.generator</groupId>
				<artifactId>maven-joynr-generator-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-java</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>${basedir}/src/main/model</model>
							<generationLanguage>java</generationLanguage>
							<outputPath>${basedir}/src/main/generated-java</outputPath>
						</configuration>
					</execution>
					<execution>
						<id>generate-cpp</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>${basedir}/src/main/model</model>
							<rootGenerator>io.joynr.generator.cpp.JoynrCppGenerator</rootGenerator>
							<outputPath>${basedir}/src/main/generated-cpp</outputPath>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.joynr.java</groupId>
						<artifactId>java-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr.cpp</groupId>
						<artifactId>cpp-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr</groupId>
						<artifactId>basemodel</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/generated-java</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
						<fileset>
							<directory>src/main/generated-cpp</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
