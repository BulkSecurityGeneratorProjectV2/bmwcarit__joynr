<!--
  #%L
  %%
  Copyright (C) 2011 - 2013 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.joynr.java.messaging</groupId>
	<artifactId>channel-service</artifactId>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	
	<description>Defines RESTful service interfaces for messaging channel setup</description>

	<parent>
		<groupId>io.joynr.java</groupId>
		<artifactId>messaging</artifactId>
		<version>0.6.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<atmosphere-version>2.0.1</atmosphere-version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>io.joynr.java.messaging</groupId>
			<artifactId>servletcommon</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-jersey</artifactId>
			<version>${atmosphere-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.atmosphere</groupId>
					<artifactId>atmosphere-ping</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- Exclude Groovy because of classpath issue -->
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-xml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.8.6</version>
		</dependency>
		
		<!-- Make sure glassfish servlet dependency is included before jetty server 
			dependency. Otherwise Absent Code Error will arise as Jetty only includes 
			interfaces but no implementations. -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<scope>test</scope>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<classpathDependencyExcludes>
						<!-- exclude code absent api -->
						<classpathDependencyExcludes>javax:javaee-api</classpathDependencyExcludes>
					</classpathDependencyExcludes>
				</configuration>
			</plugin>

		</plugins>

	</build>

</project>
