/*
 * #%L
 * %%
 * Copyright (C) 2011 - 2015 BMW Car IT GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
package infrastructure

import types.* from "DiscoveryTypes.fidl"

<**
	@description: The <code>GlobalCapabilitiesDirectory</code> is a joynr
		internal interface. When a provider that is globally available is
		registered with joynr, the framework creates an entry for that provider
		in the global capabilities directory. These
		<code>CapabilityInformation</code> entries contain access
		information as well as supported QoS. The information is later used in
		the arbitration process to pick a provider for a proxy.
	@see: CapabilityInformation
**>
interface GlobalCapabilitiesDirectory{

	version {major 0 minor 1}

	<**
		@description: Registers a list of GlobalDiscoveryEntry with the
			directory.
	**>
	method add {
		in {
			<** @description: the list of globalDiscoveryEntries to register **>
			GlobalDiscoveryEntry[] globalDiscoveryEntries
		}
	}

	<** @description: Registers a GlobalDiscoveryEntry with the directory. **>
	method add {
		in {
			<** @description: the globalDiscoveryEntry to register **>
			GlobalDiscoveryEntry globalDiscoveryEntry
		}
	}

	<**
		@description: Looks up a list of GlobalDiscoveryEntry for a given domain,
			interface name and provider QoS.
	**>
	method lookup {
		in {
			<** @description: the name of the domain **>
			String domain
			<** @description: the interface name of the capability **>
			String interfaceName
		}

		out {
			<** @description: a list of matching capabilities **>
			GlobalDiscoveryEntry[] result
		}
	}

	<**
		@description: Looks up the GlobalDiscoveryEntry for a given
			participant ID.
	**>
	method lookup {
		in {
			<** @description: the participant ID identifying the provider **>
			String participantId
		}
		out{
			<** @description: the matching GlobalDiscoveryEntry **>
			GlobalDiscoveryEntry result
		}
	}
	<**
		@description: Unregisters a list of GlobalDiscoveryEntry from the directory.
	**>
	method remove {
		in {
			<**
				@description: the list of participant IDs, for which a
					GlobalDiscoveryEntry has to be removed
			**>
			String[] participantIds
		}
	}

	<** @description: Unregisters a GlobalDiscoveryEntry from the directory. **>
	method remove {
		in {
			<**
				@description: the participant ID for which the GlobalDiscoveryEntry has
					to be removed
			**>
			String participantId
		}
	}
}
