/*
 * #%L
 * %%
 * Copyright (C) 2011 - 2015 BMW Car IT GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
package infrastructure

import types.* from "DiscoveryTypes.fidl"

<**
	@description: The <code>ChannelUrlDirectory</code> interface defines the
		interface of the joynr internal channel URL directory. The channel URL
		directory is a joynr infrastructure backend component that resolves
		channel IDs to channel URLs. A joynr Cluster Controller is addressed
		using a unique channel ID. However, the channel ID can be mapped on
		multiple channel URLs depending on network topology and reachability.
**>
interface ChannelUrlDirectory{

	version {major 0 minor 1}

	<**
		@description: Registers <code>ChannelUrlInformation</code> for
			a channel ID. The channel URL information is used to send messages
			to a Cluster Controller identified by the unique channel ID.
		@see: ChannelUrlInformation
	**>
	method registerChannelUrls {
		in {
			<**
				@description: the channel ID to register channel URL information
					with
			**>
			String channelId
			<**
				@description: the channel URL information used to send messages
					to a Cluster Controller
			**>
			ChannelUrlInformation channelUrlInformation
		}
	}

	<**
		@description: Deletes all <code>ChannelUrlInformation</code> that
			is registered with the channel URL directory for the given channel ID.
		@see: ChannelUrlInformation
	**>
	method unregisterChannelUrls {
		in {
			<**
				@description: the channel ID to remove from the directory
			**>
			String channelId
		}
	}

	<**
		@description: Gets <code>ChannelUrlInformation</code> from the
			channel URL directory for a given channel ID.
		@see: ChannelUrlInformation
	**>
	method getUrlsForChannel {
		in {
			<**
				@description: the channel ID to lookup
			**>
			String channelId
		}

		out {
			<**
				@description: channel URL information to reach the given
					channel ID
			**>
			ChannelUrlInformation result
		}
	}
}
