/*
 * #%L
 * %%
 * Copyright (C) 2011 - 2013 BMW Car IT GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
package types

/*
*
*	This document describes on an abstract level, the datatypes used 
*	for the exchange with the SCMA API
* 
*/

typeCollection ExtendedTypes {
	enumeration GpsFixEnum {
		ModeNotSeen
		ModeNoFix
		Mode2D
		Mode3D
	}

	struct GpsLocation {
		GpsFixEnum gpsFix
		Double longitude 
		Double latitude 
		Double altitude
		Double elevation //defaultValue 0.0
		Double bearing // defaultValue 0.0
		Double accuracy //defaultValue 0.0
		Int64 gpsTime // defaultValue 0
		Int64 deviceTime // defaultValue 0
		Int32 time /* might be temporary, as we use timestamps on gpslocatios for debuggin purpose */
	}
	
	struct Location extends GpsLocation {
		String description
		String country
		String city
		String street
		String streetNumber
		String postalCode
		String title
	}
	
	struct Trip {
		GpsLocation[] locations
		String tripTitle 
	}
	
	enumeration ServerWeight{
		INVALID="0"
		LOW="1"
		MID="2"
		HIGH="3"
	}
	
	struct CustomParameter {
		String name
		String value
	}
	
	enumeration ProviderScope{
		GLOBAL
		LOCAL
	}

	struct ProviderQos {
		//the list of Provider-Specific and InterfaceSpecific QoS Parameters:
		CustomParameter[] customParameters
		//the following QosParameters are joyn-internal, and need to be implemented by every provider
		Int32 providerVersion
		//maybe priority will be later moved to the list of
		Int64 priority
		// indicate that the provider is only for use with the local cluster controller
		ProviderScope scope
		// indicates if onChangeSubscriptions supported
		Boolean supportsOnChangeSubscriptions 
	}
	
	struct ProviderQosRequirements {
		//the ProviderQosRequirements are not yet implemented. Currently empty datatypes are not supported, so we put a dummy bool in here.
		Boolean notYetImplemented
	}
	
	struct CapabilityInformation {
		String domain
		String interfaceName
		ProviderQos providerQos
		String channelId
		String participantId
	}
	
	
	struct ChannelUrlInformation {
		String[] urls
	}
	
	struct Position {
		Int32 x
		Int32 y
	}
	
}
