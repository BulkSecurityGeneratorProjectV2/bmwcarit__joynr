The following instruction helps you in getting the performance test running

mvn install
npm install -g npm@latest
npm install

In order to run the end-to-end test, do the following:

1. make sure that a cluster controller is running and is accessible via WebSockets
    (make sure you use a release build cluster controller: otherwise it will be much slower)
2. start a provider:
   npm run-script startprovider --performance-test:domain=<DOMAIN> [--performance-test:cc:host=<CLUSTER_CONTROLLER_HOST> --performance-test:cc:port=<CLUSTER_CONTROLLER_PORT>]
3.a. start the javascript consumer test
   npm run-script jsconsumertest --performance-test:domain=<DOMAIN> [--performance-test:testsTypes=<TESTTYPES> --performance-test:runs=<TIMES> --performance-test:stringlength=<LENGTH> --performance-test:bytearraylength=<LENGTH> --performance-test:timeout=<TIMEOUT>] [--performance-test:cc:host=<CLUSTER_CONTROLLER_HOST> --performance-test:cc:port=<CLUSTER_CONTROLLER_PORT>]
3.b. start a consumer:
   npm run-script startconsumer --performance-test:domain=<DOMAIN> [--performance-test:testsTypes=<TESTTYPES> --performance-test:runs=<TIMES> --performance-test:stringlength=<LENGTH> --performance-test:bytearraylength=<LENGTH> --performance-test:timeout=<TIMEOUT>] [--performance-test:cc:host=<CLUSTER_CONTROLLER_HOST> --performance-test:cc:port=<CLUSTER_CONTROLLER_PORT>]

In order to run the short-circuit-test:
    npm run-script jsconsumertest --performance-test:domain=<DOMAIN> --performance-test:viacc=FALSE [--performance-test:runs=<TIMES> --performance-test:stringlength=<LENGTH> --performance-test:bytearraylength=<LENGTH> --performance-test:timeout=<TIMEOUT>] [--performance-test:bounceProxyBaseUrl=<BACKEND_HOST_URL>]

To disable some Tests e.g. echoStruct remove the letter from the testsTypes string "csbk":
    c for echoComplexStruct
    s for echoString
    b for echoByteArray
    k for echoByteArrayWithSizeTimesK