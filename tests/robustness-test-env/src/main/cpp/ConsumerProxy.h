/*
 * #%L
 * %%
 * Copyright (C) 2018 BMW Car IT GmbH
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

#ifndef CONSUMERPROXY_H
#define CONSUMERPROXY_H

#include <thread>

#include "joynr/Logger.h"
#include "joynr/tests/robustness/TestInterfaceProxy.h"

// A class that listens to messages generated by subscriptions
class ConsumerProxy
{
public:
    ConsumerProxy(joynr::tests::robustness::TestInterfaceProxy &referenceProxy, int delay):
        localProxy(referenceProxy), thread_delay_ms(delay){}
    ~ConsumerProxy() = default;
    void start();
    void stop();

private:
    ADD_LOGGER(ConsumerProxy)

    joynr::tests::robustness::TestInterfaceProxy &localProxy;

    void thread_method1();
    void thread_method2();
    std::thread t_method1;
    std::thread t_method2;
    bool thread_exit = false;
    int thread_delay_ms;
};

#endif // CONSUMERPROXY_H
