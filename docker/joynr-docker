#!/bin/bash

function usage
{
    echo "usage: joynr-docker build | push | pull [--repository|-r mydockerrepo.org --version|-v versionnumber --additionaltags|-a <comma-separated list of tags>]"
}

repository=
version=
command=$1
additionaltags=latest
shift
echo "after command: $1"

echo "in params: $1"
# if repository is set, add a single trailing slash
# if it was passed in with the slash, this is removed first
while [ "$1" != "" ]; do
echo "PARAM is: $1"
    case $1 in
        -r | --repository )     shift
                                echo "REPO"
                                repository=${1%/}/
                                ;;
        -v | --version )        shift
                                version=":$1"
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        -a | --additionaltags )  shift
                                additionaltags=$1
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

# list of available images
declare -a listOfImages=(
    "joynr-base"
    "joynr-java"
    "joynr-android"
    "joynr-javascript"
    "joynr-cpp-base"
    "joynr-cpp-gcc"
    "joynr-cpp-clang"
    "joynr-runtime-environment-base"
    "joynr-ilt-gcc"
)

function build
{
    echo "building repository: $repository$version"
    for image in "${listOfImages[@]}"
    do
        docker build -t ${repository}${image}${version} ${image}/
        IFS=',' read -ra tags <<< "$additionaltags"    #Convert string to array

        for tag in "${tags[@]}"; do
            docker tag ${repository}${image}${version} ${repository}${image}:${tag}
            docker tag ${repository}${image}${version} ${image}:${tag}
        done
    done
}

function pull
{
    echo "pulling from repository: $repository for version:$version"
    for image in "${listOfImages[@]}"
    do
        docker pull ${repository}${image}${version}
        docker tag -f ${repository}${image}${version} ${image}:latest
    done
}

function push
{
    echo "pushing to repository: $repository with version:$version"
    for image in "${listOfImages[@]}"
    do
        docker push ${repository}${image}${version}

        IFS=',' read -ra tags <<< "$additionaltags"    #Convert string to array

        for tag in "${tags[@]}"; do
            docker push ${repository}${image}:${tag}
        done

    done
}


case $command in
    build )                 build
                            exit
                            ;;
    push )                  push
                            exit
                            ;;
    pull )                  pull
                            exit
                            ;;
    * )                     usage
                            exit 1
esac
