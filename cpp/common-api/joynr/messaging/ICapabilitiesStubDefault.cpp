/*
* This file was generated by the CommonAPI Generators.
*
*/
#include <joynr/messaging/ICapabilitiesStubDefault.h>

namespace joynr {
namespace messaging {

ICapabilitiesStubDefault::ICapabilitiesStubDefault():
        remoteEventHandler_(this) {
}

ICapabilitiesStubRemoteEvent* ICapabilitiesStubDefault::initStubAdapter(const std::shared_ptr<ICapabilitiesStubAdapter>& stubAdapter) {
    stubAdapter_ = stubAdapter;
    return &remoteEventHandler_;
}


void ICapabilitiesStubDefault::add(std::string domain, std::string interfaceName, std::string participantId, types::Types::ProviderQos qos, types::Types::EndpointAddressList endpointAddressList, types::Types::EndpointAddressBase messagingStubAddress, int64_t timeout_ms) {
    // No operation in default
}

void ICapabilitiesStubDefault::addEndPoint(std::string participantId, types::Types::EndpointAddressBase messagingStubAddress, int64_t timeout_ms) {
    // No operation in default
}

void ICapabilitiesStubDefault::lookup1(std::string domain, std::string interfaceName, types::Types::ProviderQosRequirement qos, types::Types::DiscoveryQos discoveryQos, types::Types::CapabilityEntryList& result) {
    // No operation in default
}

void ICapabilitiesStubDefault::lookup2(std::string participandId, types::Types::DiscoveryQos discoveryQos, types::Types::CapabilityEntryList& result) {
    // No operation in default
}

void ICapabilitiesStubDefault::remove(std::string participantId, int64_t timeout_ms) {
    // No operation in default
}



ICapabilitiesStubDefault::RemoteEventHandler::RemoteEventHandler(ICapabilitiesStubDefault* defaultStub):
        defaultStub_(defaultStub) {
}

} // namespace messaging
} // namespace joynr
