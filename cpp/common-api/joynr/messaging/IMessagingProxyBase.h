/*
* This file was generated by the CommonAPI Generators.
*
*/
#ifndef JOYNR_MESSAGING_I_Messaging_PROXY_BASE_H_
#define JOYNR_MESSAGING_I_Messaging_PROXY_BASE_H_

#include "IMessaging.h"
#include <cstdint>
#include <joynr/messaging/types/Types.h>
#include <CommonAPI/InputStream.h>
#include <string>
#include <CommonAPI/SerializableStruct.h>
#include <CommonAPI/OutputStream.h>
#include <CommonAPI/Proxy.h>
#include <functional>
#include <future>

namespace joynr {
namespace messaging {

class IMessagingProxyBase: virtual public CommonAPI::Proxy {
 public:
    typedef std::function<void(const CommonAPI::CallStatus&)> TransmitAsyncCallback;




    virtual void transmit(const IMessaging::JoynrMessage& message, const types::Types::JoynrMessageQos& qos, CommonAPI::CallStatus& callStatus) = 0;
    virtual std::future<CommonAPI::CallStatus> transmitAsync(const IMessaging::JoynrMessage& message, const types::Types::JoynrMessageQos& qos, TransmitAsyncCallback callback) = 0;
};


} // namespace messaging
} // namespace joynr

#endif // JOYNR_MESSAGING_I_Messaging_PROXY_BASE_H_
