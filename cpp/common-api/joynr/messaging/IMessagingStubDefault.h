/*
* This file was generated by the CommonAPI Generators.
*
*/
#ifndef JOYNR_MESSAGING_I_Messaging_STUB_DEFAULT_H_
#define JOYNR_MESSAGING_I_Messaging_STUB_DEFAULT_H_

#include <joynr/messaging/IMessagingStub.h>

namespace joynr {
namespace messaging {

/**
 * Provides a default implementation for IMessagingStubRemoteEvent and
 * IMessagingStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 * 
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class IMessagingStubDefault : public IMessagingStub {
 public:
    IMessagingStubDefault();

    IMessagingStubRemoteEvent* initStubAdapter(const std::shared_ptr<IMessagingStubAdapter>& stubAdapter);


    virtual void transmit(IMessaging::JoynrMessage message, types::Types::JoynrMessageQos qos);

    

 protected:
    
 private:
    class RemoteEventHandler: public IMessagingStubRemoteEvent {
     public:
        RemoteEventHandler(IMessagingStubDefault* defaultStub);


     private:
        IMessagingStubDefault* defaultStub_;
    };

    RemoteEventHandler remoteEventHandler_;
    std::shared_ptr<IMessagingStubAdapter> stubAdapter_;

};

} // namespace messaging
} // namespace joynr

#endif // JOYNR_MESSAGING_I_Messaging_STUB_DEFAULT_H_
