/*
* This file was generated by the CommonAPI Generators.
*
*/
#ifndef JOYNR_MESSAGING_I_Capabilities_STUB_DEFAULT_H_
#define JOYNR_MESSAGING_I_Capabilities_STUB_DEFAULT_H_

#include <joynr/messaging/ICapabilitiesStub.h>

namespace joynr {
namespace messaging {

/**
 * Provides a default implementation for ICapabilitiesStubRemoteEvent and
 * ICapabilitiesStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 * 
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class ICapabilitiesStubDefault : public ICapabilitiesStub {
 public:
    ICapabilitiesStubDefault();

    ICapabilitiesStubRemoteEvent* initStubAdapter(const std::shared_ptr<ICapabilitiesStubAdapter>& stubAdapter);


    virtual void add(std::string domain, std::string interfaceName, std::string participantId, types::Types::ProviderQos qos, types::Types::EndpointAddressList endpointAddressList, types::Types::EndpointAddressBase messagingStubAddress, int64_t timeout_ms);

    virtual void addEndPoint(std::string participantId, types::Types::EndpointAddressBase messagingStubAddress, int64_t timeout_ms);

    virtual void lookup1(std::string domain, std::string interfaceName, types::Types::ProviderQosRequirement qos, types::Types::DiscoveryQos discoveryQos, types::Types::CapabilityEntryList& result);

    virtual void lookup2(std::string participandId, types::Types::DiscoveryQos discoveryQos, types::Types::CapabilityEntryList& result);

    virtual void remove(std::string participantId, int64_t timeout_ms);

    

 protected:
    
 private:
    class RemoteEventHandler: public ICapabilitiesStubRemoteEvent {
     public:
        RemoteEventHandler(ICapabilitiesStubDefault* defaultStub);


     private:
        ICapabilitiesStubDefault* defaultStub_;
    };

    RemoteEventHandler remoteEventHandler_;
    std::shared_ptr<ICapabilitiesStubAdapter> stubAdapter_;

};

} // namespace messaging
} // namespace joynr

#endif // JOYNR_MESSAGING_I_Capabilities_STUB_DEFAULT_H_
